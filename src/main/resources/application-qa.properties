#server.port=8082
#server.contexPath=/services
logging.level.org.springframework.web = INFO
logging.level.com.optum.rxclaimnextgen.elg = DEBUG
logging.level.org.apache.http=DEBUG
#logging.level.org.hibernate=DEBUG

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=${DS_URL}
spring.datasource.username=${DS_USERNAME}
spring.datasource.password=${DS_PASSWORD}
spring.datasource.driver-class-name=com.ibm.as400.access.AS400JDBCDriver
# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=create-drop
# Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.DB2Dialect
bk1.baseurl = ${BK1_URL}
bk2.baseurl = ${BK2_URL}
d1-qa.baseurl = ${D1_URL}